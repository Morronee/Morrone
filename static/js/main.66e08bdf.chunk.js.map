{"version":3,"sources":["components/Dialogs/Message/Message.module.css","api.js","utils/validations/validators.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Setting/Setting.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","redux/dialogReducer.js","components/Dialogs/DialogsContainer.jsx","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","components/common/SuspenseComponent.js","serviceWorker.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControl.jsx","components/common/FormsControls/FormsControl.module.css","components/Dialogs/Dialogs.module.css","components/common/WithAuthRedirect.js","components/Dialogs/Dialog/Dialog.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css","redux/profileReducer.js","components/common/Preloader.jsx","redux/usersReducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followedAPI","follow","id","post","unfollow","delete","profilesAPI","setProfile","getStatus","upStatus","status","put","authAPI","authMe","login","email","password","rememberMe","logout","max","Navbar","className","s","nav","bc","item","to","activeClassName","active","setting","News","Music","src","alt","WithAuthRedirect","props","Dialog","dialog","chat_img","nickname","Message","Toast","Header","nick","Body","textMessage","required","value","requiredLength","length","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","InputGroup","Field","name","component","Input","placeholder","validate","Append","Dialogs","dialogsEl","dialogsPage","dialogsData","map","d","messageEl","messagesData","m","message","dialogs","dialogs_items","mesagges_items","message_write","formData","console","log","sendMessage","initialState","author","newMessage","dialogReducer","state","action","type","text","stateCopy","push","filter","messageId","compose","connect","dispatch","messageText","textEl","addMessageInStateActionCreate","addMessageInDialogActionCreate","header","logo","loginAuth","isAuth","onClick","isLoading","setUserData","payload","meThunk","a","resultCode","authReducer","HeaderContainer","this","React","Component","auth","ReduxLoginForm","error","style","errorSummaryLogin","stopSubmit","_error","messages","initialized","appReducer","ProfileContainer","lazy","UsersContainer","App","initializeApp","path","render","fallback","Login","Setting","Preloader","withRouter","app","promise","Promise","all","Boolean","window","location","hostname","match","reducers","combineReducers","profilePage","profileReducer","usersPage","usersReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_callSubscriber","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","input","meta","hintError","touched","styles","formControl","RedirectComponent","posts","newPostText","profiles","updateNewPostInStateActionCreate","newText","addPostInProfileCationCreate","setStatus","setProfilesThunk","userId","setStatusThunk","setNewStatusThunk","addPostsId","newPost","animation","users","totalUsersCount","isDisabled","userID","setCountTotalUsers","totalUsers","setIsLoading","loading","setIsDisabled","setCurrentPage","items","totalCount","unfollowSuccess","followSuccess","u","followed"],"mappings":"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","file":"static/js/main.66e08bdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__y9gpS\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { 'API-KEY': '56cfcec3-c475-47ed-bea2-f54ed88717c1' }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 45) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n    }\r\n}\r\nexport const followedAPI = {\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n        .then(response => response.data)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n        .then(response => response.data)\r\n    }\r\n}\r\nexport const profilesAPI = {\r\n    setProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n        .then(response => response.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n        .then(response => response.data)\r\n    },\r\n    upStatus(status) {\r\n        return instance.put(`profile/status/`, {status})\r\n        .then(response => response)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get('auth/me')\r\n        .then(response => response)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}","\r\n\r\nexport const required = value => {\r\n    if (value) return undefined\r\n        // По правилам библиотеки redux-form, когда к нам \r\n        // возвращается undefined, значит никакой ошибки нет\r\n        // и нам позволят совершить onSubmit\r\n    \r\n        return 'Field is required'\r\n        // В противном случае onSubmit не выполнится, а в meta.error,\r\n        // запишется текст который мы передадим. \r\n    }\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    if (value.length > max) return `Max length: ${max}`;\r\n    return undefined\r\n\r\n    \r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.bc}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={`${s.item} ${s.setting}`}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n                </div>\r\n\r\n\r\n                <div className={`${s.item} ${s.setting}`}>\r\n                    <NavLink to=\"/setting\" activeClassName={s.active}>Setting</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n// import s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n// import s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div><img src=\"/public/img/social/facebook-4-240.png\" alt=\"\"/></div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { WithAuthRedirect } from '../common/WithAuthRedirect';\r\n// import s from './Setting.module.css';\r\n\r\nconst Setting = (props) => {\r\n    return (\r\n        <div>Setting</div>\r\n    )\r\n}\r\n\r\nexport default (WithAuthRedirect(Setting));","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n\r\n    return (\r\n                <div className={s.dialog}>\r\n                    <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}><img className={s.chat_img} src=\"http://s1.iconbird.com/ico/2013/6/271/w513h5131371296185messages.png\" alt=\"\"/>\r\n                    {props.nickname}</NavLink>\r\n                </div>\r\n    )\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport { Toast } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <Toast>\r\n                <Toast.Header>\r\n                    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n                    <strong className=\"mr-auto\">{props.nick}</strong>\r\n                    <small>11 mins ago</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{props.textMessage}</Toast.Body>\r\n            </Toast>\r\n        </div>\r\n        // <div>\r\n        //     <p className={s.item}>{props.textMessage}</p>\r\n        // </div>\r\n    )\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport { InputGroup, Button, FormControl } from 'react-bootstrap'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { required, maxLength } from '../../utils/validations/validators';\r\nimport { Input } from '../common/FormsControls/FormsControl';\r\n\r\nconst requiredLength = maxLength(10)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <InputGroup className=\"mb-3\">\r\n                <Field name={'message'} component={Input}\r\n                    placeholder=\"Write you message\"\r\n                    validate={[required, requiredLength]}\r\n                />\r\n                <InputGroup.Append>\r\n                    <button>SEND</button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({ form: 'dialogs' })(MessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsEl = props.dialogsPage.dialogsPage.dialogsData.map(d => <Dialog nickname={d.nickname} id={d.id} />);\r\n    let messageEl = props.dialogsPage.dialogsPage.messagesData.map(m => <Message nick={m.nick} textMessage={m.message} id={m.id} />);\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(props)\r\n        // props.messageText(formData.message)\r\n        props.sendMessage(formData.message)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsEl}\r\n            </div>\r\n\r\n            <div className={s.mesagges_items}>\r\n                {messageEl}\r\n            </div>\r\n            <div className={s.message_write}>\r\n                <ReduxMessageForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","const ADD_MESSAGE_IN_DIALOG = 'ADD-MESSAGE-IN-DIALOG';\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    dialogsPage: {\r\n        dialogsData: [\r\n            { id: 12, nickname: 'Ivan' },\r\n            { id: 32, nickname: 'Petr' },\r\n            { id: 42, nickname: 'Vova' },\r\n            { id: 23, nickname: 'Alex' },\r\n            { id: 7, nickname: 'Test Props2' }\r\n        ],\r\n        messagesData: [\r\n            { id: 1, nick: 'Kenny', message: 'Hi, man', author: 'other' },\r\n            { id: 2, nick: 'Me', message: 'Hi ^_^', author: 'me' },\r\n            { id: 3, nick: 'Kenny', message: 'How are you?', author: 'other' },\r\n            { id: 4, nick: 'Me', message: 'Ty, Im fine, u?', author: 'me' },\r\n            { id: 5, nick: 'Kenny', message: 'Lol, im good', author: 'other' }\r\n        ],\r\n        newMessage: ''\r\n    }\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_MESSAGE_IN_DIALOG: {\r\n            let newMessage = {\r\n                id: 123,\r\n                message: action.text,\r\n                nick: 'Me',\r\n                author: 'Me'\r\n            }\r\n            let stateCopy = {...state}\r\n            stateCopy.dialogsPage.messagesData = [...state.dialogsPage.messagesData]\r\n            stateCopy.dialogsPage.messagesData.push(newMessage)\r\n            // stateCopy.dialogsPage.newMessage = ''\r\n            return stateCopy;\r\n        }\r\n        case DELETE_POST: {\r\n            let stateCopy = {...state}\r\n            stateCopy.dialogsPage.messagesData = [...state.dialogsPage.messagesData.filter(m => m.id != action.messageId)]\r\n            return stateCopy\r\n            // {...state.dialogsPage, messagesData: state.dialogsPage.messagesData.filter(m => m.id != action.messageId)}\r\n        }\r\n\r\n        // case ADD_MESSAGE_IN_STATE: {\r\n        //     let stateCopy = {...state}\r\n        //     stateCopy.dialogsPage.newMessage = action.text\r\n        //     return stateCopy;\r\n        // }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\nexport const addMessageInStateActionCreate = (textEl) => ({ type: 'ADD-MESSAGE-IN-STATE', text: textEl })\r\nexport const addMessageInDialogActionCreate = (textEl) => ({ type: 'ADD-MESSAGE-IN-DIALOG', text: textEl })\r\nexport const deleteMessage = (messageId) => ({type: DELETE_POST, messageId})\r\n\r\n\r\nexport default dialogReducer;\r\n","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { addMessageInStateActionCreate, addMessageInDialogActionCreate } from '../../redux/dialogReducer';\r\nimport { connect } from 'react-redux';\r\nimport { WithAuthRedirect } from '../common/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        messageText: (textEl) => {\r\n            dispatch(addMessageInStateActionCreate(textEl))\r\n        },\r\n        sendMessage: (textEl) => {\r\n            dispatch(addMessageInDialogActionCreate(textEl))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n    )(Dialogs)\r\n\r\n\r\n// const ContainerDialogs = WithAuthRedirect(connect(mapStateToProps, mapDispatchToProps) (Dialogs));\r\n\r\n// export default ContainerDialogs;","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img className={s.logo} src=\"https://ventopromo.ru/sites/all/themes/flumb/logo.png\"></img>\r\n      <div className={s.loginAuth}>\r\n        {props.isAuth ? <h4>{props.login}<span onClick={props.logout}>Logout</span></h4> : <NavLink to='/login'>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header;","import {\r\n    authAPI\r\n} from \"../api\";\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isLoading: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                \r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n\r\n}\r\nexport const setUserData = (id, login, email, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        id,\r\n        login,\r\n        email,\r\n        isAuth: isAuth\r\n    }\r\n})\r\n\r\nexport const meThunk = () => async (dispatch) => {\r\n       let response = await authAPI.authMe()\r\n                if (response.data.resultCode === 0) {\r\n                    let {\r\n                        id,\r\n                        email,\r\n                        login\r\n                    } = response.data.data\r\n                    dispatch(setUserData(id, login, email, true))\r\n                }\r\n    }\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(meThunk()) \r\n                } else {\r\n                    dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\r\n                }\r\n    }\r\n\r\nexport const logout = () => async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setUserData(null, null, null, false)) \r\n                }\r\n    }\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { required } from '../../utils/validations/validators';\r\nimport { Input } from '../common/FormsControls/FormsControl';\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/authReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport style from '../common/FormsControls/FormsControl.module.css'\r\n\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'email'} component={Input} placeholder={'Login'} type=\"login\" validate={[required]} /></div>\r\n            <div><Field name={'password'} component={Input} placeholder={'Password'} type=\"password\" validate={[required]}/></div>\r\n            <div><Field name={'rememberMe'} component={Input} type={\"checkbox\"} /> Remember me</div>\r\n            { props.error && <div className={style.errorSummaryLogin}>\r\n                {props.error}\r\n            </div>}\r\n            <div><button>Login</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst ReduxLoginForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n\r\n        // Тут происходит обработка и совершение действий \r\n        // с данными полученными из формы\r\n\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            \r\n\r\n            {/* Тут мы отображаем нашу форму и передаем в нее обработку  */}\r\n            <ReduxLoginForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(maStateToProps, {login}) (Login)","import {\r\n    authAPI\r\n} from \"../api\";\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nimport {meThunk} from './authReducer'\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n   \r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n                \r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n\r\n}\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(meThunk())\r\n\r\n        \r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            }) \r\n\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Setting from './components/Setting/Setting';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport ContainerDialogs from './components/Dialogs/DialogsContainer';\r\n\r\n\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {initializeApp} from './redux/app-reducer'\r\nimport Preloader from './components/common/Preloader';\r\nimport {LazyLoad} from \"./components/common/SuspenseComponent\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n// import ProfileContainer from './components/Profile/ProfileContainer';\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n// import UsersContainer from './components/Users/UsersContainer';\r\n\r\n\r\n\r\nclass App extends React.Component  {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n    console.log('app')\r\n  }\r\n  \r\n  render(){\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n\r\n  return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n\r\n          <Route path='/profile/:userId?' render={LazyLoad(ProfileContainer)}\r\n              />\r\n          <Route path='/login' \r\n            component={Login}/>\r\n\r\n          <Route path='/dialogs' render={() => \r\n            <ContainerDialogs \r\n            \r\n              />}\r\n            />\r\n\r\n          <Route path='/news' \r\n            component={News}/>\r\n          <Route path='/music' \r\n            component={Music}/>\r\n\r\n          <Route path='/users' render={() => {\r\n              return (\r\n                  <Suspense fallback={<div>Loading...</div>}>\r\n                    <UsersContainer />\r\n                  </Suspense>\r\n\r\n              )}} />\r\n\r\n          <Route path='/setting' \r\n            component={Setting}/>\r\n        </div>\r\n      </div>\r\n    \r\n  );}\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n","import React, {Suspense} from 'react'\r\n\r\nexport const LazyLoad = (Component) => {\r\n        return (props) => {\r\n                return (<Suspense fallback={<div>Load...</div>}><Component {...props} /></Suspense>)\r\n                }\r\n\r\n\r\n        return LazyLoad\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport dialogReducer from './dialogReducer';\r\nimport profileReducer from './profileReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\n\r\nlet _callSubscriber = (state) => { ReactDOM.render(\r\n    \r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n}\r\n\r\n_callSubscriber(store.getState());\r\n\r\nstore.subscribe(() => {\r\n    let state = store.getState();\r\n    _callSubscriber(state);\r\n});\r\n\r\n\r\n\r\n\r\n// If you want your app to work aoffline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './FormsControl.module.css'\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n\r\n    const hintError = meta.touched && meta.error\r\n    //создадим переменную что бы не дублировать код\r\n    //услвоия: если есть текст ошибки и или поле было активированно\r\n\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hintError ? styles.error : '')}>\r\n            {/* проверяем, если есть ошибка и или мы бросили форму, то добавим клас styles.error\r\n            который окрасит наш input красным цветом */}\r\n            <div>\r\n                <input  {...input } {...props} />\r\n                {/* раскукоживаем все данные */}\r\n            </div>\r\n            <div>\r\n                {hintError && <span >{meta.error}</span>}\r\n                {/* проверяем, если есть ошибка и или мы бросили форму, то\r\n                отобразим span с текстом ошибки */}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__39-8b\",\"error\":\"FormsControl_error__2g_tr\",\"errorSummaryLogin\":\"FormsControl_errorSummaryLogin__2OiYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__19cMg\",\"dialogs_items\":\"Dialogs_dialogs_items__2KQFJ\",\"mesagges_items\":\"Dialogs_mesagges_items__1GJA-\",\"message_write\":\"Dialogs_message_write__3LMJO\",\"message_send\":\"Dialogs_message_send__1yPlC\"};","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n        class RedirectComponent extends React.Component {\r\n                \r\n                render() {\r\n                        if (!this.props.auth) return <Redirect to='/login' />\r\n\r\n                        return <Component {...this.props} />\r\n                }\r\n        }\r\n        let mapStateToPropsForRedirect = (state) => {\r\n                return {\r\n                    auth: state.auth.isAuth\r\n                }\r\n            }\r\n            \r\n        let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n        return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat_img\":\"Dialog_chat_img__o-mde\",\"dialog\":\"Dialog_dialog__3fA7X\",\"active\":\"Dialog_active__1yei_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3PjvG\",\"logo\":\"Header_logo__kmdqL\",\"loginAuth\":\"Header_loginAuth__87ZJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__135fG\",\"active\":\"Navbar_active__3iu7v\",\"setting\":\"Navbar_setting__6B9yP\",\"nav\":\"Navbar_nav__30VV4\"};","import { profilesAPI } from './../api.js';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\r\nconst SET_PROFILE = 'SET_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState = {\r\n    profilePage: {\r\n        posts: [\r\n            { id: 1, message: 'Hi, all right', nick: 'Kenny' },\r\n            { id: 2, message: 'Test .map', nick: 'Larry' },\r\n            { id: 3, message: 'Test props', nick: 'Henry' },\r\n            { id: 4, message: 'Test props 2', nick: 'Bob' },\r\n            { id: 5, message: 'Test props from state 2', nick: 'Log' }\r\n        ],\r\n        newPostText: ''\r\n        \r\n    },\r\n    profiles: null,\r\n    status: ''\r\n}\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n        case ADD_POST : {\r\n            const addPostsId = state.profilePage.posts.length + 1\r\n    \r\n            let newPost = {\r\n                id: addPostsId,\r\n                message: state.profilePage.newPostText,\r\n                nick: 'PropsMan'\r\n            }\r\n            let stateCopy = {...state};\r\n            stateCopy.profilePage.posts = [...state.profilePage.posts];\r\n            stateCopy.profilePage.posts.push(newPost);\r\n            stateCopy.profilePage.newPostText = '';\r\n            return stateCopy;\r\n        }\r\n        \r\n        case UPDATE_NEW_POST : {\r\n            let stateCopy = {...state};\r\n            stateCopy.profilePage.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        \r\n        case SET_PROFILE: {\r\n            return {\r\n                ...state, profiles: action.profiles\r\n            }\r\n        }\r\n        \r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        \r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport const updateNewPostInStateActionCreate = (text) => ({ type: 'UPDATE-NEW-POST', newText: text })\r\nexport const addPostInProfileCationCreate = () => ({ type: 'ADD-POST' })\r\nexport const setProfiles = (profiles) => ({ type: SET_PROFILE, profiles })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const setProfilesThunk = (id) => async (dispatch) => {\r\n        let userId = id\r\n        let myProfile = 1775\r\n        if (!userId) {\r\n            userId = myProfile\r\n        }\r\n        let response = await profilesAPI.setProfile(userId)\r\n            dispatch(setProfiles(response))\r\n    }\r\n\r\nexport const setStatusThunk = (id) => async (dispatch) => {\r\n       let response = await profilesAPI.getStatus(id)\r\n            console.log('get - ' + response)\r\n            dispatch(setStatus(response))\r\n}\r\n\r\nexport const setNewStatusThunk = (status) => async (dispatch) => {\r\n    let response = await profilesAPI.upStatus(status)\r\n        // if (response.data.resultCode === 0) {\r\n            console.log('UP - ' + status)\r\n        dispatch(setStatus(status))\r\n}\r\n\r\n\r\nexport default profileReducer;","import { Spinner } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nlet Preloader = (props) => {\r\n    return <Spinner animation=\"border\" />\r\n        \r\n}\r\n\r\nexport default Preloader","import {\r\n    usersAPI,\r\n    followedAPI\r\n} from './../api.js'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_PAGE = 'SET_TOTAL_PAGE'\r\nconst TOGGLE_IS_LOADING = 'TOGGLE_IS_LOADING'\r\nconst TOGGLE_IS_DISABLED = 'TOGGLE_IS_DISABLED'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 45,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    isDisabled: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n            case UNFOLLOW:\r\n                return {\r\n                    ...state,\r\n                    users: state.users.map(u => {\r\n                        if (u.id === action.userID) {\r\n                            return {\r\n                                ...u,\r\n                                followed: false\r\n                            }\r\n                        }\r\n                        return u;\r\n                    })\r\n                }\r\n\r\n                case SET_USERS:\r\n                    return {\r\n                        ...state, users: action.users\r\n                    }\r\n\r\n                    case SET_CURRENT_PAGE:\r\n                        return {\r\n                            ...state, currentPage: action.currentPage\r\n                        }\r\n\r\n                        case SET_TOTAL_PAGE:\r\n                            return {\r\n                                ...state, totalUsersCount: action.totalUsers\r\n                            }\r\n\r\n                            case TOGGLE_IS_LOADING:\r\n                                return {\r\n                                    ...state, isLoading: action.loading\r\n                                }\r\n\r\n                                case TOGGLE_IS_DISABLED:\r\n                                    return {\r\n                                        ...state,\r\n                                        isDisabled: action.loading ? [...state.isDisabled, action.userID] :\r\n                                            state.isDisabled.filter(id => id != action.userID)\r\n                                    }\r\n\r\n                                    default:\r\n                                        return state;\r\n    }\r\n}\r\nexport const follow = (userID) => ({\r\n    type: FOLLOW,\r\n    userID\r\n})\r\nexport const unfollow = (userID) => ({\r\n    type: UNFOLLOW,\r\n    userID\r\n})\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setCountTotalUsers = (totalUsers) => ({\r\n    type: SET_TOTAL_PAGE,\r\n    totalUsers\r\n})\r\nexport const setIsLoading = (loading) => ({\r\n    type: TOGGLE_IS_LOADING,\r\n    loading\r\n})\r\nexport const setIsDisabled = (loading, userID) => ({\r\n    type: TOGGLE_IS_DISABLED,\r\n    loading,\r\n    userID\r\n})\r\n\r\nexport const getUsers = (currentPage, usersPage) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsLoading(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        usersAPI.getUsers(currentPage, usersPage).then(response => {\r\n            dispatch(setIsLoading(false))\r\n            dispatch(setUsers(response.items))\r\n            dispatch(setCountTotalUsers(response.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsDisabled(true, userID))\r\n        followedAPI.unfollow(userID)\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(unfollow(userID))\r\n                    dispatch(setIsDisabled(false, userID))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsDisabled(true, userID))\r\n        followedAPI.follow(userID)\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    dispatch(follow(userID))\r\n                    dispatch(setIsDisabled(false, userID))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;"],"sourceRoot":""}